/**
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.r2RML.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.r2RML.Constant;
import org.xtext.example.mydsl.r2RML.R2RMLPackage;
import org.xtext.example.mydsl.r2RML.iResource;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Constant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.r2RML.impl.ConstantImpl#getConstName <em>Const Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.r2RML.impl.ConstantImpl#getConstStr <em>Const Str</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConstantImpl extends MinimalEObjectImpl.Container implements Constant
{
  /**
   * The cached value of the '{@link #getConstName() <em>Const Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstName()
   * @generated
   * @ordered
   */
  protected iResource constName;

  /**
   * The default value of the '{@link #getConstStr() <em>Const Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstStr()
   * @generated
   * @ordered
   */
  protected static final String CONST_STR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConstStr() <em>Const Str</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstStr()
   * @generated
   * @ordered
   */
  protected String constStr = CONST_STR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConstantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return R2RMLPackage.Literals.CONSTANT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public iResource getConstName()
  {
    return constName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstName(iResource newConstName, NotificationChain msgs)
  {
    iResource oldConstName = constName;
    constName = newConstName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, R2RMLPackage.CONSTANT__CONST_NAME, oldConstName, newConstName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstName(iResource newConstName)
  {
    if (newConstName != constName)
    {
      NotificationChain msgs = null;
      if (constName != null)
        msgs = ((InternalEObject)constName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - R2RMLPackage.CONSTANT__CONST_NAME, null, msgs);
      if (newConstName != null)
        msgs = ((InternalEObject)newConstName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - R2RMLPackage.CONSTANT__CONST_NAME, null, msgs);
      msgs = basicSetConstName(newConstName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, R2RMLPackage.CONSTANT__CONST_NAME, newConstName, newConstName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getConstStr()
  {
    return constStr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstStr(String newConstStr)
  {
    String oldConstStr = constStr;
    constStr = newConstStr;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, R2RMLPackage.CONSTANT__CONST_STR, oldConstStr, constStr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case R2RMLPackage.CONSTANT__CONST_NAME:
        return basicSetConstName(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case R2RMLPackage.CONSTANT__CONST_NAME:
        return getConstName();
      case R2RMLPackage.CONSTANT__CONST_STR:
        return getConstStr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case R2RMLPackage.CONSTANT__CONST_NAME:
        setConstName((iResource)newValue);
        return;
      case R2RMLPackage.CONSTANT__CONST_STR:
        setConstStr((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case R2RMLPackage.CONSTANT__CONST_NAME:
        setConstName((iResource)null);
        return;
      case R2RMLPackage.CONSTANT__CONST_STR:
        setConstStr(CONST_STR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case R2RMLPackage.CONSTANT__CONST_NAME:
        return constName != null;
      case R2RMLPackage.CONSTANT__CONST_STR:
        return CONST_STR_EDEFAULT == null ? constStr != null : !CONST_STR_EDEFAULT.equals(constStr);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (constStr: ");
    result.append(constStr);
    result.append(')');
    return result.toString();
  }

} //ConstantImpl
